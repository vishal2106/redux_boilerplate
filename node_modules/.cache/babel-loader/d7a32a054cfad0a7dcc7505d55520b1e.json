{"ast":null,"code":"import { FETCH_POSTS, NEW_POSTS } from \"./types\";\nexport const fetchPosts = () => dispatch => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(posts => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n};\nexport const createPosts = postData => dispatch => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(post)\n  }).then(res => res.json()).then(data => dispatch({\n    type: NEW_POSTS,\n    payload: posts\n  }));\n};","map":{"version":3,"sources":["/home/vishal/neubrain/redux/reduxexample/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POSTS","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPosts","postData","method","headers","body","JSON","stringify","post","data"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,SAAvC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,KAAK,IACTL,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAET,WADC;AAEPU,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAHZ;AAQD,CATM;AAWP,OAAO,MAAMG,WAAW,GAAGC,QAAQ,IAAIT,QAAQ,IAAI;AACjDC,EAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDS,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyC;AAKlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;AAL4C,GAA/C,CAAL,CAOGb,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQc,IAAI,IACRhB,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAER,SADC;AAEPS,IAAAA,OAAO,EAAEF;AAFF,GAAD,CATZ;AAcD,CAfM","sourcesContent":["import { FETCH_POSTS, NEW_POSTS } from \"./types\";\n\nexport const fetchPosts = () => dispatch => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      })\n    );\n};\n\nexport const createPosts = postData => dispatch => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(post)\n  })\n    .then(res => res.json())\n    .then(data =>\n      dispatch({\n        type: NEW_POSTS,\n        payload: posts\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}